#+TITLE: Sitemap for project blog

- [[file:blog/Data-oriented-programming.org][Data Oriented Programming]] :: Мой обзор на MEAP книги Data Oriented Programming. Неплохая книжечка, в которой
  описаны все плюсы clojure, но о самом языке ни слова.
- [[file:blog/Di-frameworks.org][Решают ли DI-фреймворки больше проблем, чем создают?]] :: В моём канале с мемами много шуток про то, что в спорах между Dagger 2 и Koin на
  самом деле побеждают фабрики. Так вот, это не шутки. Я считаю что DI-фреймворки
  в android - это подражание спрингерам, дань моде, следствие хронического
  ООП-клинкода головного мозга и просто переоценённое излишество. Жёсткий наброс
  вкинут, давайте разбираться, правда ли это.
- [[file:blog/Comments.org][Комментарии в коде]] :: Устаревание комментариев в коде - проблема, для которой, на первый взгляд, не
  найти хорошего решения. Попробую накидать свои мысли об этом.
- [[file:blog/Online-meetups.org][Кому нужны онлайн митапы?]] :: Провести митап онлайн гораздо дешевле чем снимать помещение и кормить всех
  пиццулей. На мой взгляд это путь в никуда, а сам я всегда стараюсь
  организовывать митапы оффлайн. Рассказываю, почему.
- [[file:blog/DSL-over-API.org][Антипаттерн DSL over API]] :: Kotlin часто рекламируется как язык, в котором классно и легко писать eDSL -
  embedded domain specific languages. Писать-то может их и классно, но часто потом
  пользоваться получившимися DSL не очень удобно. В чём же проблема?
- [[file:blog/Coeffects.org][Коэффекты]] :: Коэффекты - очень размытое понятие, используемое в разных контекстах немного
  по-разному. Но для построения чисто функционального приложения они являются
  очень важными. Попробую обьяснить, как я их понимаю сам.
- [[file:index.org][Голос из под шторки]]
- [[file:blog/zshell-setup.org][Мой .zshrc с использованием zinit]] :: Zshell - очень крутая оболочка. Возможности её [[https://thevaluable.dev/zsh-line-editor-configuration-mouseless/][line-editor]] практически
  безграничны: тут тебе и поддержка биндов и виджеты. Жаль, что "из коробки"
  ничего, кроме автокомплита, не увидишь. Приходится настраивать всё самому,
  дёргая сниппеты из статей добрых людей из интернета. Настало время мне и самому
  написать небольшой гайд по конфигурации zsh.
- [[file:blog/TheElmArchitectureRevisited.org][The Elm Architecture в Android проекте: 3 года спустя]] :: Почти 3 года назад я "продал" TEA своей команде в Авто.ру. С тех пор наша команда
  написала 180 TEA-компонентов - от простых экранов с парой кнопок до сложных
  форм-визардов с кучей логики. Тогда одним из ключевых требований дизайна,
  которые я перед собой ставил, был интероп с тогдашним стеком приложения - MVP +
  Clean Architecture, RxJava, Dagger 2. С тех пор я много думал о том, как бы
  выглядела архитектура, если убрать ограничение на совместимость с наследием
  эпохи Clean Architecture. Эта статья - компиляция моих заметок на эту тему.
- [[file:blog/Manual-DI-Cookbook.org][Ладонь против Ножа: Ручной DI вместо Dagger]] :: Год назад я написал [[file:Di-frameworks.org][пост]] про то что DI фреймворки не решают проблемы, а заменяют
  их новыми. На что многие мне ответили "а как же так? ты что, пишешь зависимости
  рУкАмИ? Ты что, Dagger пишет код за меня!". Ну что ж, давайте я в новом посте
  покажу тебе, мой сомневающийся в силе фабрик читатель, как при помощи
  by-делегации в Kotlin можно писать кода не больше чем при использовании Dagger.